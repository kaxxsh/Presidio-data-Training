<?xml version="1.0" encoding="ISO-8859-1"?>
<opml version="2.0">
	<head>
		<title>readme.md</title>
		<dateModified>Fri, 19 Jul 2024 15:16:03 GMT</dateModified>
		<expansionState></expansionState>
		<vertScrollState>1</vertScrollState>
		<windowTop>300</windowTop>
		<windowLeft>700</windowLeft>
		<windowBottom>900</windowBottom>
		<windowRight>1500</windowRight>
		</head>
	<body created="Thu, 18 Jul 2024 20:57:17 GMT" text="readme.md">
		<outline created="Thu, 18 Jul 2024 20:57:19 GMT" text="# userland storage">
			<outline created="Fri, 19 Jul 2024 15:03:55 GMT" text="This is a simple standalone storage system that's designed to be integrated into any software that needs user-based storage. "></outline>
			<outline created="Fri, 19 Jul 2024 15:04:21 GMT" text="We're using it here as part of the identity system we call userland. But it should be just as easy to integrate it with other identity systems."></outline>
			<outline created="Fri, 19 Jul 2024 15:04:56 GMT" text="I wanted once and for all to have a thoroughly thought-out design for this, based on many years of experience using and creating these kinds of storage systems."></outline>
			<outline created="Fri, 19 Jul 2024 15:05:25 GMT" text="It's influenced by many different file systems, from Unix, Mac, PC, S3, Frontier and most recently FeedLand. "></outline>
			<outline created="Fri, 19 Jul 2024 15:08:35 GMT" text="It's influenced especially by the Mac OS -- each file has a &lt;i&gt;metadata&lt;/i&gt; property, in JSON, that's shared between all the applications for each user. In the Mac it's like the refcon handle in objects and the resource fork of files. "></outline>
			</outline>
		<outline created="Fri, 19 Jul 2024 15:13:30 GMT" text="### Why userland?">
			<outline created="Fri, 19 Jul 2024 15:10:08 GMT" text="It's called userland because like the company I started in the late 80s, it's the best name for describing what's going on here. This is functionality for developers to create products for users. It's taking the last step for turning the web into a virtual machine. There already exist good toolkits for user interface and serving content publicly. But there is no way for an app developer to create a utility for users without having to create their own OS. Obviously that has limited the creativity of developers. I've tried to explain many times why this is needed, but I guess the only way to make it happen is to give others a target to shoot at. I've done it for Node.js, but the apps that use it can run in any environment as long as they have the ability to make calls over the web, and there are good standards for that. "></outline>
			</outline>
		<outline created="Fri, 19 Jul 2024 15:06:30 GMT" text="### What is a file?">
			<outline created="Fri, 19 Jul 2024 15:06:37 GMT" text="Each file is identified by a username and a relpath. "></outline>
			<outline created="Fri, 19 Jul 2024 15:06:57 GMT" text="Each file is also assigned a unique integer id, and all the API functions use the id. There's a function that turns a username/relpath pair into an id, of course. "></outline>
			<outline created="Fri, 19 Jul 2024 15:07:48 GMT" text="Files can be public or private. Public files can be served over the web, and a function is provided to interface to a web server. You have to provide the server function."></outline>
			<outline created="Fri, 19 Jul 2024 15:14:18 GMT" text="Files have contents, a type, dates for when the file was created and updated and how many times it has been updated."></outline>
			</outline>
		<outline created="Fri, 19 Jul 2024 15:02:10 GMT" text="### SQL code">
			<outline text="&lt;%includeExample (&quot;sqlCommands&quot;)%&gt;"></outline>
			</outline>
		</body>
	</opml>
